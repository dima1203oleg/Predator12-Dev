#!/bin/bash

echo "üîß –ü–µ—Ä–µ–±—É–¥–æ–≤–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —á–æ—Ä–Ω–æ–≥–æ –µ–∫—Ä–∞–Ω—É..."

# –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –ø–∞–ø–∫–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É
cd /Users/dima/Documents/Predator12/predator12-local/frontend

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–≥–æ main.tsx
cp src/main.tsx src/main-original.tsx

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ main.tsx
cat > src/main.tsx << 'EOF'
// @ts-nocheck
import React from 'react';
import ReactDOM from 'react-dom/client';

const SimpleApp = () => {
  return (
    <div style={{
      backgroundColor: '#ffffff',
      color: '#000000',
      padding: '50px',
      fontSize: '24px',
      fontFamily: 'Arial, sans-serif',
      minHeight: '100vh'
    }}>
      <h1 style={{color: '#0066cc'}}>üöÄ Predator Frontend Test</h1>
      <p>‚úÖ –Ø–∫—â–æ –≤–∏ –±–∞—á–∏—Ç–µ —Ü–µ–π —Ç–µ–∫—Å—Ç, React –ø—Ä–∞—Ü—é—î!</p>
      <p>üïê –ß–∞—Å: {new Date().toLocaleString()}</p>
      <p>üîç –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: –¢–µ—Å—Ç–æ–≤–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π —É—Å–ø—ñ—à–Ω–æ</p>
    </div>
  );
};

ReactDOM.createRoot(document.getElementById('root')!).render(<SimpleApp />);
EOF

echo "‚úÖ –¢–µ—Å—Ç–æ–≤–∏–π main.tsx —Å—Ç–≤–æ—Ä–µ–Ω–æ"

# –ü–µ—Ä–µ–±—É–¥–æ–≤–∞
echo "üî® –ü–µ—Ä–µ–±—É–¥–æ–≤–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É..."
npm run build

echo "üê≥ –ü–µ—Ä–µ–±—É–¥–æ–≤–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
cd /Users/dima/Documents/Predator12/predator12-local
docker-compose build --no-cache frontend

echo "üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
docker-compose up -d frontend

echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ http://localhost:3000"
