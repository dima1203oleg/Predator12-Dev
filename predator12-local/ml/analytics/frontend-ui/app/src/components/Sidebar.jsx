import React, { useState } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';

const Sidebar = () => {
    const navigate = useNavigate();
    const location = useLocation();
    const [expanded, setExpanded] = useState(true);

    const toggleSidebar = () => {
        setExpanded(!expanded);
    };

    const navItems = [
        { path: '/dashboard', label: '–ú—ñ—Å—Ç –Ø–¥—Ä–∞', icon: 'üåê' },
        { path: '/ai-supervisor', label: '–í—É–ª–∏–∫ –®–Ü', icon: 'üß†' },
        { path: '/data-ops', label: '–§–∞–±—Ä–∏–∫–∞ –î–∞–Ω–∏—Ö', icon: 'üìä' },
        { path: '/intelligence-feed', label: '–ü–æ—Ç—ñ–∫ –û—Ä–∞–∫—É–ª–∞', icon: 'üîî' },
        { path: '/network-intelligence', label: '–ù–µ–π—Ä–æ–Ω–Ω–∞ –ö–∞—Ä—Ç–∞', icon: 'üîó' },
        { path: '/opensearch', label: '–ê–Ω–∞–ª—ñ—Ç–∏—á–Ω–∞ –ü–∞–ª—É–±–∞', icon: 'üîç' },
        { path: '/chrono-spatial', label: '–•—Ä–æ–Ω–æ-–ü—Ä–æ—Å—Ç—ñ—Ä', icon: 'üåç' },
        { path: '/reality-simulator', label: '–°–∏–º—É–ª—è—Ç–æ—Ä –†–µ–∞–ª—å–Ω–æ—Å—Ç–µ–π', icon: 'üåÄ' },
        { path: '/notification-demo', label: '–°–∏—Å—Ç–µ–º–∞ –°–ø–æ–≤—ñ—â–µ–Ω—å', icon: 'üì¢' },
        { path: '/admin', label: '–°–≤—è—Ç–∏–ª–∏—â–µ –ê—Ä—Ö—ñ—Ç–µ–∫—Ç–æ—Ä–∞', icon: 'üîí' },
    ];

    return (
        <aside
            className={`fixed top-0 left-0 h-full bg-gray-900 bg-opacity-90 shadow-lg border-r border-gray-700 z-20 transition-all duration-300 ${expanded ? 'w-64' : 'w-16'}`}
        >
            <div className="flex items-center justify-between p-4 border-b border-gray-700">
                <h1 className={`font-bold text-blue-400 transition-opacity ${expanded ? 'opacity-100' : 'opacity-0'}`}>Nexus Core</h1>
                <button onClick={toggleSidebar} className="text-gray-300 hover:text-white transition duration-200">
                    {expanded ? '‚óÄ' : '‚ñ∂'}
                </button>
            </div>
            <nav className="p-2 overflow-y-auto h-[calc(100vh-60px)] scrollbar-thin scrollbar-thumb-gray-700 scrollbar-track-transparent">
                {navItems.map((item) => (
                    <button
                        key={item.path}
                        onClick={() => navigate(item.path)}
                        className={`w-full flex items-center px-4 py-3 mb-2 rounded-lg transition duration-200 text-left border ${expanded ? 'justify-start' : 'justify-center'} ${location.pathname === item.path ? 'bg-blue-800 text-blue-400 border-blue-700' : 'bg-gray-800 text-gray-300 hover:bg-gray-700 border-gray-700'}`}
                    >
                        <span className="text-lg">{item.icon}</span>
                        {expanded && <span className="ml-3 font-medium">{item.label}</span>}
                    </button>
                ))}
                <div className="mt-6 pt-4 border-t border-gray-700">
                    <button
                        onClick={() => navigate('/')}
                        className={`w-full flex items-center px-4 py-3 rounded-lg transition duration-200 text-left border ${expanded ? 'justify-start' : 'justify-center'} bg-red-800 text-red-300 hover:bg-red-700 border-red-700`}
                    >
                        <span className="text-lg">üö™</span>
                        {expanded && <span className="ml-3 font-medium">–í–∏—Ö—ñ–¥</span>}
                    </button>
                </div>
            </nav>
        </aside>
    );
};

export default Sidebar; 