#!/usr/bin/env python3
import os
import sys
from pathlib import Path

print("üîç –®–í–ò–î–ö–ê –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ê –í–ï–ë-–Ü–ù–¢–ï–†–§–ï–ô–°–£")
print("=" * 40)

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path("/Users/dima/Documents/Predator11")
frontend_dir = project_root / "frontend"

print(f"üìÅ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –ø—Ä–æ–µ–∫—Ç—É...")
print(f"   –ö–æ—Ä—ñ–Ω—å: {project_root.exists()}")
print(f"   Frontend: {frontend_dir.exists()}")

# –ö–ª—é—á–æ–≤—ñ —Ñ–∞–π–ª–∏ frontend'—É
key_files = [
    "package.json",
    "vite.config.ts", 
    "index.html",
    "src/main.tsx",
    "src/App.tsx"
]

print("\nüìÑ –ö–ª—é—á–æ–≤—ñ —Ñ–∞–π–ª–∏ frontend'—É:")
for file in key_files:
    file_path = frontend_dir / file
    if file_path.exists():
        size = file_path.stat().st_size
        print(f"   ‚úÖ {file} ({size} –±–∞–π—Ç)")
    else:
        print(f"   ‚ùå {file} - –≤—ñ–¥—Å—É—Ç–Ω—ñ–π")

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ node_modules
node_modules = frontend_dir / "node_modules"
if node_modules.exists():
    try:
        modules_count = len(list(node_modules.iterdir()))
        print(f"   ‚úÖ node_modules ({modules_count} –º–æ–¥—É–ª—ñ–≤)")
    except:
        print("   ‚úÖ node_modules (—ñ—Å–Ω—É—î)")
else:
    print("   ‚ùå node_modules - –≤—ñ–¥—Å—É—Ç–Ω—ñ")

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Docker —Ñ–∞–π–ª—ñ–≤
print("\nüê≥ Docker –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è:")
docker_files = [
    project_root / "docker-compose.yml",
    frontend_dir / "Dockerfile",
    frontend_dir / "nginx.conf"
]

for file in docker_files:
    if file.exists():
        print(f"   ‚úÖ {file.name}")
    else:
        print(f"   ‚ùå {file.name}")

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ .env —Ñ–∞–π–ª—ñ–≤
print("\n‚öôÔ∏è  –ó–º—ñ–Ω–Ω—ñ –æ—Ç–æ—á–µ–Ω–Ω—è:")
env_files = [
    project_root / ".env",
    project_root / ".env.example"
]

for file in env_files:
    if file.exists():
        print(f"   ‚úÖ {file.name}")
    else:
        print(f"   ‚ùå {file.name}")

# –û—Å–Ω–æ–≤–Ω—ñ –º–æ–∂–ª–∏–≤—ñ –ø—Ä–æ–±–ª–µ–º–∏
print("\nüîß –ú–û–ñ–õ–ò–í–Ü –ü–†–û–ë–õ–ï–ú–ò:")

problems = []

if not (frontend_dir / "node_modules").exists():
    problems.append("–í—ñ–¥—Å—É—Ç–Ω—ñ node_modules - –ø–æ—Ç—Ä—ñ–±–Ω–æ: cd frontend && npm install")

if not (project_root / ".env").exists():
    problems.append("–í—ñ–¥—Å—É—Ç–Ω—ñ–π .env —Ñ–∞–π–ª - –ø–æ—Ç—Ä—ñ–±–Ω–æ: cp .env.example .env")

# –°–ø—Ä–æ–±–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø–æ—Ä—Ç–∏ (–ø—Ä–æ—Å—Ç–∏–π —Å–ø–æ—Å—ñ–±)
try:
    import socket
    
    def check_port(port, name):
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)
        result = sock.connect_ex(('localhost', port))
        sock.close()
        return result == 0
    
    print("\nüì° –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ä—Ç—ñ–≤:")
    
    ports = {3000: "Frontend", 8000: "Backend", 5432: "PostgreSQL", 6379: "Redis"}
    
    for port, name in ports.items():
        if check_port(port, name):
            print(f"   ‚úÖ –ü–æ—Ä—Ç {port} ({name}): –ó–ê–ô–ù–Ø–¢–ò–ô")
        else:
            print(f"   ‚ùå –ü–æ—Ä—Ç {port} ({name}): –í–Ü–õ–¨–ù–ò–ô")
            if port == 3000:
                problems.append("Frontend –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ")
            elif port == 8000:
                problems.append("Backend –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ")

except ImportError:
    print("   ‚ö†Ô∏è  –ù–µ–º–æ–∂–ª–∏–≤–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø–æ—Ä—Ç–∏")

if problems:
    print(f"\n‚ùå –ó–ù–ê–ô–î–ï–ù–û {len(problems)} –ü–†–û–ë–õ–ï–ú:")
    for i, problem in enumerate(problems, 1):
        print(f"   {i}. {problem}")
else:
    print("\n‚úÖ –û–°–ù–û–í–ù–Ü –ö–û–ú–ü–û–ù–ï–ù–¢–ò –ù–ê –ú–Ü–°–¶–Ü")

print("\nüí° –ö–û–ú–ê–ù–î–ò –î–õ–Ø –ó–ê–ü–£–°–ö–£:")
print("=" * 30)

print("# 1. –ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ):")
print("cd /Users/dima/Documents/Predator11")
print("cp .env.example .env")
print("cd frontend")
print("npm install")
print()
print("# 2. –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ Docker:")
print("cd /Users/dima/Documents/Predator11")  
print("docker compose up -d")
print()
print("# 3. –ê–ë–û –∑–∞–ø—É—Å–∫ frontend –æ–∫—Ä–µ–º–æ:")
print("cd frontend")
print("npm run dev")
print()
print("üåê –ü—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É: http://localhost:3000")

print(f"\n‚úÖ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
