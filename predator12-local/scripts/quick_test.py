import subprocess
import time
import os
from pathlib import Path

print("üöÄ –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç –∑–∞–ø—É—Å–∫—É –∞–≥–µ–Ω—Ç—ñ–≤")
print("=" * 40)

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Python
try:
    import asyncio
    import json
    print("‚úÖ Python –º–æ–¥—É–ª—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ")
except ImportError as e:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É: {e}")

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª—ñ–≤ –∞–≥–µ–Ω—Ç—ñ–≤
agents = {
    'AutoHeal': '/Users/dima/Documents/Predator11/agents/auto-heal/auto_heal_agent.py',
    'SelfImprovement': '/Users/dima/Documents/Predator11/agents/self-improvement/self_improvement_agent.py',
    'SelfDiagnosis': '/Users/dima/Documents/Predator11/agents/self-diagnosis/self_diagnosis_agent.py'
}

print("\nüìÅ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª—ñ–≤ –∞–≥–µ–Ω—Ç—ñ–≤:")
for name, path in agents.items():
    if Path(path).exists():
        size = Path(path).stat().st_size
        print(f"   ‚úÖ {name}: {size} –±–∞–π—Ç")
    else:
        print(f"   ‚ùå {name}: —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")

# –¢–µ—Å—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É –∞–≥–µ–Ω—Ç—ñ–≤
print("\nüîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É:")
for name, path in agents.items():
    if Path(path).exists():
        try:
            result = subprocess.run(['python3', '-m', 'py_compile', path], 
                                  capture_output=True, timeout=10)
            if result.returncode == 0:
                print(f"   ‚úÖ {name}: —Å–∏–Ω—Ç–∞–∫—Å–∏—Å OK")
            else:
                print(f"   ‚ùå {name}: –ø–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É")
                if result.stderr:
                    print(f"      {result.stderr.decode()[:100]}")
        except Exception as e:
            print(f"   ‚ùå {name}: –ø–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ - {e}")

print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
print("–í—Å—ñ –∞–≥–µ–Ω—Ç–∏ –≥–æ—Ç–æ–≤—ñ –¥–æ –∑–∞–ø—É—Å–∫—É!")
print("–î–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ –ø–æ—Ç—Ä—ñ–±–Ω—ñ:")
print("- Redis –Ω–∞ localhost:6379")
print("- PostgreSQL –Ω–∞ localhost:5432") 
print("- Kafka –Ω–∞ localhost:9092")

print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ –æ {time.strftime('%H:%M:%S')}")
