#!/bin/bash

echo "üöÄ –ó–ê–ü–£–°–ö PREDATOR11 SYSTEM TEST"
echo "================================="

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É —Å–µ—Ä–≤—ñ—Å—É
check_service() {
    local service_name=$1
    local url=$2
    
    echo -n "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ $service_name... "
    
    if curl -s -f "$url" > /dev/null 2>&1; then
        echo "‚úÖ OK"
        return 0
    else
        echo "‚ùå –ù–ï–î–û–°–¢–£–ü–ù–ò–ô"
        return 1
    fi
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –∞–≥–µ–Ω—Ç–∞
start_agent() {
    local agent_name=$1
    local agent_path=$2
    
    echo "ü§ñ –ó–∞–ø—É—Å–∫ $agent_name..."
    
    if [ -f "$agent_path" ]; then
        cd "$(dirname "$agent_path")"
        python3 "$(basename "$agent_path")" &
        local agent_pid=$!
        echo "   PID: $agent_pid"
        echo "$agent_pid" > "/tmp/${agent_name}.pid"
        sleep 2
    else
        echo "   ‚ùå –§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: $agent_path"
    fi
}

# 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Docker —Å–µ—Ä–≤—ñ—Å—ñ–≤
echo "üìã –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
echo "========================"

check_service "PostgreSQL" "localhost:5432" || echo "   PostgreSQL –º–æ–∂–µ –±—É—Ç–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π"
check_service "Redis" "localhost:6379" || echo "   Redis –º–æ–∂–µ –±—É—Ç–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π" 
check_service "Prometheus" "http://localhost:9090/-/healthy"
check_service "Backend API" "http://localhost:8000/health"

echo ""

# 2. –ó–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç—ñ–≤ —Å–∞–º–æ–≤–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–Ω—è
echo "ü§ñ –ó–∞–ø—É—Å–∫ –∞–≥–µ–Ω—Ç—ñ–≤ —Å–∞–º–æ–≤–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–Ω—è..."
echo "====================================="

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö –æ—Ç–æ—á–µ–Ω–Ω—è –¥–ª—è –∞–≥–µ–Ω—Ç—ñ–≤
export REDIS_URL="redis://localhost:6379/0"
export DATABASE_URL="postgresql://postgres:postgres@localhost:5432/predator11"
export KAFKA_BROKERS="localhost:9092"

start_agent "AutoHeal" "/Users/dima/Documents/Predator11/agents/auto-heal/auto_heal_agent.py"
start_agent "SelfImprovement" "/Users/dima/Documents/Predator11/agents/self-improvement/self_improvement_agent.py"
start_agent "SelfDiagnosis" "/Users/dima/Documents/Predator11/agents/self-diagnosis/self_diagnosis_agent.py"

echo ""

# 3. –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
echo "üìä –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ (30 —Å–µ–∫—É–Ω–¥)..."
echo "======================================="

monitor_duration=30
start_time=$(date +%s)

while [ $(($(date +%s) - start_time)) -lt $monitor_duration ]; do
    echo -n "."
    sleep 1
done

echo ""

# 4. –ó–±—ñ—Ä —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
echo "üìà –ó–±—ñ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤..."
echo "====================="

echo "–ó–∞–ø—É—â–µ–Ω—ñ –∞–≥–µ–Ω—Ç–∏:"
for pid_file in /tmp/AutoHeal.pid /tmp/SelfImprovement.pid /tmp/SelfDiagnosis.pid; do
    if [ -f "$pid_file" ]; then
        agent_name=$(basename "$pid_file" .pid)
        pid=$(cat "$pid_file")
        if ps -p $pid > /dev/null 2>&1; then
            echo "   ‚úÖ $agent_name (PID: $pid) - –ê–ö–¢–ò–í–ù–ò–ô"
        else
            echo "   ‚ùå $agent_name (PID: $pid) - –ó–£–ü–ò–ù–ï–ù–ò–ô"
        fi
    fi
done

echo ""

# 5. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª–æ–≥—ñ–≤
echo "üìù –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª–æ–≥—ñ–≤..."
echo "===================="

log_dirs=(
    "/Users/dima/Documents/Predator11/logs/agents"
    "/Users/dima/Documents/Predator11/logs/autoheal"  
    "/tmp"
)

for log_dir in "${log_dirs[@]}"; do
    if [ -d "$log_dir" ]; then
        echo "–î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è: $log_dir"
        find "$log_dir" -name "*.log" -newer /tmp/test_start_time 2>/dev/null | head -5 | while read logfile; do
            echo "   üìÑ $(basename "$logfile"): $(wc -l < "$logfile") —Ä—è–¥–∫—ñ–≤"
        done
    fi
done

echo ""

# 6. Cleanup —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑—É–ø–∏–Ω–∫–∏ –∞–≥–µ–Ω—Ç—ñ–≤
cleanup_agents() {
    echo "üõë –ó—É–ø–∏–Ω–∫–∞ –∞–≥–µ–Ω—Ç—ñ–≤..."
    
    for pid_file in /tmp/AutoHeal.pid /tmp/SelfImprovement.pid /tmp/SelfDiagnosis.pid; do
        if [ -f "$pid_file" ]; then
            agent_name=$(basename "$pid_file" .pid)
            pid=$(cat "$pid_file")
            if ps -p $pid > /dev/null 2>&1; then
                echo "   –ó—É–ø–∏–Ω—è—é $agent_name (PID: $pid)"
                kill $pid
            fi
            rm -f "$pid_file"
        fi
    done
}

# 7. –ü—ñ–¥—Å—É–º–æ–∫
echo "üìã –ü–Ü–î–°–£–ú–û–ö –¢–ï–°–¢–£"
echo "================="

# –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –∞–∫—Ç–∏–≤–Ω–∏—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤
active_agents=0
for pid_file in /tmp/AutoHeal.pid /tmp/SelfImprovement.pid /tmp/SelfDiagnosis.pid; do
    if [ -f "$pid_file" ]; then
        pid=$(cat "$pid_file")
        if ps -p $pid > /dev/null 2>&1; then
            ((active_agents++))
        fi
    fi
done

echo "–ê–∫—Ç–∏–≤–Ω–∏—Ö –∞–≥–µ–Ω—Ç—ñ–≤: $active_agents/3"
echo "–ß–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: $monitor_duration —Å–µ–∫—É–Ω–¥"
echo ""

# –û–ø—Ü—ñ—ó –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
echo "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:"
echo "1. –ó—É–ø–∏–Ω–∏—Ç–∏ –≤—Å—ñ –∞–≥–µ–Ω—Ç–∏"
echo "2. –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —Ä–æ–±–æ—Ç—É –≤ —Ñ–æ–Ω—ñ"
echo "3. –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–µ—Ç–∞–ª—å–Ω—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"

read -p "–í–∞—à –≤–∏–±—ñ—Ä (1/2/3): " choice

case $choice in
    1)
        cleanup_agents
        echo "‚úÖ –í—Å—ñ –∞–≥–µ–Ω—Ç–∏ –∑—É–ø–∏–Ω–µ–Ω—ñ"
        ;;
    2)
        echo "‚úÖ –ê–≥–µ–Ω—Ç–∏ –ø—Ä–æ–¥–æ–≤–∂—É—é—Ç—å —Ä–æ–±–æ—Ç—É –≤ —Ñ–æ–Ω—ñ"
        echo "–î–ª—è –∑—É–ø–∏–Ω–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ: killall python3"
        ;;
    3)
        echo "üìä –î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
        echo "======================="
        ps aux | grep -E "(auto_heal|self_improvement|self_diagnosis)" | grep -v grep
        ;;
esac

echo ""
echo "üéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
