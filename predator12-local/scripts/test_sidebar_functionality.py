#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ –±—ñ—á–Ω–æ–≥–æ –º–µ–Ω—é
"""

import requests
import json
import time
import sys
from pathlib import Path

def test_frontend_availability():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É"""
    try:
        response = requests.get('http://localhost:3000', timeout=5)
        return response.status_code == 200
    except:
        return False

def check_module_components():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –º–æ–¥—É–ª—ñ–≤"""
    frontend_path = Path(__file__).parent.parent / "frontend" / "src" / "components" / "modules"
    
    required_modules = [
        'ETLModule.tsx',
        'ChronoModule.tsx', 
        'SimulatorModule.tsx',
        'AnalyticsModule.tsx',
        'AdminModule.tsx',
        'OpenSearchModule.tsx'
    ]
    
    missing_modules = []
    for module in required_modules:
        module_path = frontend_path / module
        if not module_path.exists():
            missing_modules.append(module)
    
    return missing_modules

def check_nexus_core():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é NexusCore"""
    nexus_core_path = Path(__file__).parent.parent / "frontend" / "src" / "components" / "nexus" / "NexusCore.tsx"
    
    if not nexus_core_path.exists():
        return False, "NexusCore.tsx –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    
    content = nexus_core_path.read_text()
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —ñ–º–ø–æ—Ä—Ç—ñ–≤ –º–æ–¥—É–ª—ñ–≤
    expected_imports = [
        'import ETLModule',
        'import ChronoModule', 
        'import SimulatorModule',
        'import AnalyticsModule',
        'AdminModule',  # named import
        'OpenSearchModule'  # named import
    ]
    
    missing_imports = []
    for imp in expected_imports:
        if imp not in content:
            missing_imports.append(imp)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –º–æ–¥—É–ª—ñ–≤ —É renderModule
    module_cases = [
        "case 'etl':\n        return <ETLModule />",
        "case 'chrono':\n        return <ChronoModule />",
        "case 'simulator':\n        return <SimulatorModule />",
        "case 'opensearch':\n        return <OpenSearchModule />",
        "case 'admin':\n        return <AdminModule />"
    ]
    
    missing_cases = []
    for case in module_cases:
        if case not in content:
            missing_cases.append(case)
    
    return len(missing_imports) == 0 and len(missing_cases) == 0, {
        'missing_imports': missing_imports,
        'missing_cases': missing_cases
    }

def main():
    print("üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ –±—ñ—á–Ω–æ–≥–æ –º–µ–Ω—é...")
    print("=" * 50)
    
    # 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –º–æ–¥—É–ª—ñ–≤
    print("1Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –º–æ–¥—É–ª—ñ–≤...")
    missing_modules = check_module_components()
    
    if missing_modules:
        print(f"‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ –º–æ–¥—É–ª—ñ: {', '.join(missing_modules)}")
        return 1
    else:
        print("‚úÖ –í—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –º–æ–¥—É–ª—ñ–≤ –ø—Ä–∏—Å—É—Ç–Ω—ñ")
    
    # 2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó NexusCore
    print("\n2Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó NexusCore...")
    is_valid, details = check_nexus_core()
    
    if not is_valid:
        print(f"‚ùå –ü—Ä–æ–±–ª–µ–º–∏ –≤ NexusCore: {details}")
        if isinstance(details, dict):
            if details.get('missing_imports'):
                print(f"   –í—ñ–¥—Å—É—Ç–Ω—ñ —ñ–º–ø–æ—Ä—Ç–∏: {details['missing_imports']}")
            if details.get('missing_cases'):
                print(f"   –í—ñ–¥—Å—É—Ç–Ω—ñ case –±–ª–æ–∫–∏: {details['missing_cases']}")
        return 1
    else:
        print("‚úÖ NexusCore –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ")
    
    # 3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É
    print("\n3Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É...")
    if test_frontend_availability():
        print("‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–Ω–∏–π –Ω–∞ http://localhost:3000")
    else:
        print("‚ö†Ô∏è –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π –Ω–∞ http://localhost:3000")
        print("   –ó–∞–ø—É—Å—Ç—ñ—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∫–æ–º–∞–Ω–¥–æ—é: npm start (–≤ –ø–∞–ø—Ü—ñ frontend)")
    
    print("\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üìù –†–µ–∑—É–ª—å—Ç–∞—Ç: –í—Å—ñ –º–æ–¥—É–ª—ñ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω—ñ –¥–æ –±—ñ—á–Ω–æ–≥–æ –º–µ–Ω—é")
    print("üí° –¢–µ–ø–µ—Ä –∫–Ω–æ–ø–∫–∏ –±—ñ—á–Ω–æ–≥–æ –º–µ–Ω—é –ø–æ–≤–∏–Ω–Ω—ñ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ä–µ–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –∑–∞–º—ñ—Å—Ç—å –∑–∞–≥–ª—É—à–æ–∫")
    
    return 0

if __name__ == '__main__':
    sys.exit(main())
