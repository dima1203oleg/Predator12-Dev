#!/bin/bash

echo "üîç –î–Ü–ê–ì–ù–û–°–¢–ò–ö–ê –í–ï–ë-–Ü–ù–¢–ï–†–§–ï–ô–°–£ PREDATOR11"
echo "========================================"

# –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
check_port() {
    local port=$1
    local service_name=$2
    
    echo -n "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ä—Ç—É $port ($service_name)... "
    
    if lsof -i :$port > /dev/null 2>&1; then
        echo "‚úÖ –ó–ê–ô–ù–Ø–¢–ò–ô"
        lsof -i :$port | head -2
    else
        echo "‚ùå –í–Ü–õ–¨–ù–ò–ô"
    fi
}

check_service_health() {
    local url=$1
    local service_name=$2
    
    echo -n "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ $service_name ($url)... "
    
    if curl -s -f "$url" > /dev/null 2>&1; then
        echo "‚úÖ –î–û–°–¢–£–ü–ù–ò–ô"
    else
        echo "‚ùå –ù–ï–î–û–°–¢–£–ü–ù–ò–ô"
    fi
}

# 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ä—Ç—ñ–≤
echo "üì° –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ä—Ç—ñ–≤..."
echo "===================="
check_port 3000 "Frontend"
check_port 8000 "Backend API"
check_port 5432 "PostgreSQL"
check_port 6379 "Redis"
check_port 9200 "OpenSearch"
check_port 9090 "Prometheus"

echo ""

# 2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
echo "üê≥ –°—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."
echo "==============================="

cd /Users/dima/Documents/Predator11

if docker compose ps 2>/dev/null | grep -q "Up\|running"; then
    echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –∑–∞–ø—É—â–µ–Ω—ñ:"
    docker compose ps | grep -E "(Up|running)"
else
    echo "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω—ñ"
    echo "–°–ø—Ä–æ–±—É–π—Ç–µ: docker compose up -d"
fi

echo ""

# 3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π Node.js
echo "üì¶ Frontend –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ..."
echo "========================"

cd frontend

if [ -d "node_modules" ]; then
    echo "‚úÖ node_modules —ñ—Å–Ω—É—î"
    echo "   –†–æ–∑–º—ñ—Ä: $(du -sh node_modules 2>/dev/null | cut -f1)"
else
    echo "‚ùå node_modules –≤—ñ–¥—Å—É—Ç–Ω—ñ"
    echo "   –ü–æ—Ç—Ä—ñ–±–Ω–æ: npm install"
fi

if [ -f "package-lock.json" ]; then
    echo "‚úÖ package-lock.json —ñ—Å–Ω—É—î"
else
    echo "‚ùå package-lock.json –≤—ñ–¥—Å—É—Ç–Ω—ñ–π"
fi

echo ""

# 4. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ TypeScript/ESLint –ø–æ–º–∏–ª–æ–∫
echo "üîß –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–¥—É..."
echo "==================="

if command -v npm &> /dev/null; then
    if [ -d "node_modules" ]; then
        echo "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ TypeScript..."
        if npm run typecheck 2>/dev/null; then
            echo "‚úÖ TypeScript: OK"
        else
            echo "‚ùå TypeScript: –Ñ –ø–æ–º–∏–ª–∫–∏"
        fi
    else
        echo "‚ö†Ô∏è  –ù–µ–º–æ–∂–ª–∏–≤–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ - –≤—ñ–¥—Å—É—Ç–Ω—ñ node_modules"
    fi
else
    echo "‚ùå npm –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
fi

echo ""

# 5. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª—ñ–≤ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
echo "‚öôÔ∏è  –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω—ñ —Ñ–∞–π–ª–∏..."
echo "==========================="

config_files=(
    "vite.config.ts"
    "package.json"
    "tsconfig.json"
    ".env"
    "nginx.conf"
)

for file in "${config_files[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file"
    elif [ -f "../$file" ]; then
        echo "‚úÖ $file (–≤ –∫–æ—Ä–µ–Ω—ñ –ø—Ä–æ–µ–∫—Ç—É)"
    else
        echo "‚ùå $file –≤—ñ–¥—Å—É—Ç–Ω—ñ–π"
    fi
done

echo ""

# 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
echo "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á"
echo "==============="

if [ ! -d "node_modules" ]; then
    echo "1. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ:"
    echo "   cd frontend && npm install"
fi

if ! docker compose ps 2>/dev/null | grep -q "Up"; then
    echo "2. –ó–∞–ø—É—Å—Ç—ñ—Ç—å Docker —Å–µ—Ä–≤—ñ—Å–∏:"
    echo "   cd /Users/dima/Documents/Predator11 && docker compose up -d"
fi

if ! lsof -i :3000 > /dev/null 2>&1; then
    echo "3. –ó–∞–ø—É—Å—Ç—ñ—Ç—å frontend:"
    echo "   cd frontend && npm run dev"
fi

if ! curl -s -f "http://localhost:8000/health" > /dev/null 2>&1; then
    echo "4. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ backend API:"
    echo "   curl http://localhost:8000/health"
fi

echo ""
echo "üìã –®–í–ò–î–ö–ò–ô –°–¢–ê–†–¢:"
echo "================"
echo "# –ü–æ–≤–Ω–∏–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–∏:"
echo "cd /Users/dima/Documents/Predator11"
echo "docker compose up -d"
echo "cd frontend"
echo "npm install"
echo "npm run dev"
echo ""
echo "üåê –ü—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É –≤—ñ–¥–∫—Ä–∏–π—Ç–µ: http://localhost:3000"
