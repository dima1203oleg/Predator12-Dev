#!/usr/bin/env python3
import http.server
import socketserver
import os
import sys

# –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó dist
try:
    os.chdir('frontend/dist')
    print("‚úÖ –ü–µ—Ä–µ–π—à–æ–≤ –¥–æ frontend/dist")
except:
    print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ frontend/dist. –í–∏–∫–æ–Ω–∞–π—Ç–µ npm run build —Å–ø–æ—á–∞—Ç–∫—É.")
    sys.exit(1)

PORT = 8080

class MyHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    def end_headers(self):
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Cache-Control', 'no-cache, no-store, must-revalidate')
        self.send_header('Pragma', 'no-cache')
        self.send_header('Expires', '0')
        super().end_headers()

    def log_message(self, format, *args):
        print(f"üåê {self.address_string()} - {format % args}")

print(f"üöÄ –ó–∞–ø—É—Å–∫ Predator Nexus –Ω–∞ http://localhost:{PORT}")
print(f"üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è: {os.getcwd()}")
print(f"‚èπÔ∏è  –ó—É–ø–∏–Ω–∏—Ç–∏: Ctrl+C")
print()

try:
    with socketserver.TCPServer(("", PORT), MyHTTPRequestHandler) as httpd:
        print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤–∏–π –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
        httpd.serve_forever()
except KeyboardInterrupt:
    print("\nüõë –°–µ—Ä–≤–µ—Ä –∑—É–ø–∏–Ω–µ–Ω–æ")
except Exception as e:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
