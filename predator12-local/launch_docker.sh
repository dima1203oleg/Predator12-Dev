#!/bin/bash

# üê≥ PREDATOR NEXUS - DOCKER LAUNCHER
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –∑–∞–ø—É—Å–∫ —Ç–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤

echo "üöÄ PREDATOR NEXUS - DOCKER DEPLOYMENT"
echo "====================================="
echo ""

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∫–æ–ª—å–æ—Ä–æ–≤–æ–≥–æ –≤–∏–≤–æ–¥—É
print_status() {
    local color=$1
    local message=$2
    case $color in
        "green") echo -e "\033[32m‚úÖ $message\033[0m" ;;
        "yellow") echo -e "\033[33m‚ö†Ô∏è  $message\033[0m" ;;
        "red") echo -e "\033[31m‚ùå $message\033[0m" ;;
        "blue") echo -e "\033[34m‚ÑπÔ∏è  $message\033[0m" ;;
        *) echo "$message" ;;
    esac
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Docker
print_status "blue" "Checking Docker status..."

if ! command -v docker &> /dev/null; then
    print_status "red" "Docker –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π!"
    echo "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Docker Desktop: https://docker.com/products/docker-desktop"
    exit 1
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Docker daemon
if ! docker info &> /dev/null; then
    print_status "red" "Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω–∏–π!"
    echo "–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø—É—Å—Ç—ñ—Ç—å Docker Desktop"
    exit 1
fi

print_status "green" "Docker –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏"

# –ó—É–ø–∏–Ω–∫–∞ —ñ—Å–Ω—É—é—á–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
print_status "blue" "–ó—É–ø–∏–Ω–∫–∞ —ñ—Å–Ω—É—é—á–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."
docker-compose -f docker-compose.nexus.yml down 2>/dev/null || true
docker-compose -f docker-compose.simple.yml down 2>/dev/null || true

# –û—á–∏—Å—Ç–∫–∞
print_status "blue" "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–∏—Ö –æ–±—Ä–∞–∑—ñ–≤..."
docker system prune -f 2>/dev/null || true

echo ""
echo "üéØ –î–æ—Å—Ç—É–ø–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –∑–∞–ø—É—Å–∫—É:"
echo "1. –ü—Ä–æ—Å—Ç–∏–π frontend (—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ)"
echo "2. –ü–æ–≤–Ω–∏–π Nexus stack"
echo "3. –í—Å—ñ —Å–µ—Ä–≤—ñ—Å–∏"
echo ""

read -p "–û–±–µ—Ä—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç (1-3): " choice

case $choice in
    1)
        print_status "blue" "–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
        if docker-compose -f docker-compose.simple.yml up -d --build; then
            print_status "green" "–ü—Ä–æ—Å—Ç–∏–π frontend –∑–∞–ø—É—â–µ–Ω–æ!"
            echo "üåê –î–æ—Å—Ç—É–ø: http://localhost:8080"
        else
            print_status "red" "–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –ø—Ä–æ—Å—Ç–æ–≥–æ frontend"
        fi
        ;;
    2)
        print_status "blue" "–ó–∞–ø—É—Å–∫ –ø–æ–≤–Ω–æ–≥–æ Nexus stack..."
        if docker-compose -f docker-compose.nexus.yml up -d --build; then
            print_status "green" "Nexus stack –∑–∞–ø—É—â–µ–Ω–æ!"
            echo "üåê Frontend: http://localhost:3000"
            echo "üîß Backend API: http://localhost:8000"
        else
            print_status "red" "–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É Nexus stack"
        fi
        ;;
    3)
        print_status "blue" "–ó–∞–ø—É—Å–∫ –≤—Å—ñ—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤..."
        if docker-compose up -d --build; then
            print_status "green" "–í—Å—ñ —Å–µ—Ä–≤—ñ—Å–∏ –∑–∞–ø—É—â–µ–Ω–æ!"
            echo "üåê –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ docker ps –¥–ª—è –ø–æ—Ä—Ç—ñ–≤"
        else
            print_status "red" "–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –≤—Å—ñ—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤"
        fi
        ;;
    *)
        print_status "yellow" "–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø—Ä–æ—Å—Ç–∏–π frontend..."
        docker-compose -f docker-compose.simple.yml up -d --build
        ;;
esac

echo ""
print_status "blue" "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."
sleep 3

# –ü–æ–∫–∞–∑–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏
echo ""
echo "üìä –ê–ö–¢–ò–í–ù–Ü –ö–û–ù–¢–ï–ô–ù–ï–†–ò:"
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

echo ""
echo "üìã –ö–û–†–ò–°–ù–Ü –ö–û–ú–ê–ù–î–ò:"
echo "docker ps                     # –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏"
echo "docker logs <container_name>  # –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –ª–æ–≥–∏"
echo "docker-compose down           # –ó—É–ø–∏–Ω–∏—Ç–∏ –≤—Å—ñ"
echo ""

print_status "green" "Docker deployment –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üéä Predator Nexus –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è!"
