#!/bin/bash

# ============================================================================
# Predator12 Python 3.11 Migration Script
# ============================================================================
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –º—ñ–≥—Ä–∞—Ü—ñ—è –Ω–∞ Python 3.11 –∑ modern stack
# ============================================================================

set -e

# –ö–æ–ª—å–æ—Ä–∏
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

# –§—É–Ω–∫—Ü—ñ—ó
print_header() {
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${CYAN}$1${NC}"
    echo -e "${CYAN}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
}

print_step() {
    echo -e "\n${BLUE}‚ñ∂ $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# Banner
clear
print_header "üöÄ PREDATOR12 PYTHON 3.11 MIGRATION"
echo ""

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
if [ ! -d "backend" ]; then
    print_error "–ó–∞–ø—É—Å—Ç—ñ—Ç—å —Å–∫—Ä–∏–ø—Ç –∑ –∫–æ—Ä–µ–Ω—è predator12-local/"
    exit 1
fi

cd backend

# –ö—Ä–æ–∫ 1: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Python 3.11
print_step "–ö—Ä–æ–∫ 1/8: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Python 3.11"

# –ü–æ—à—É–∫ Python 3.11
PYTHON311=""
for cmd in python3.11 /opt/homebrew/bin/python3.11 /usr/local/bin/python3.11; do
    if command -v $cmd &> /dev/null; then
        PYTHON311=$cmd
        break
    fi
done

if [ -z "$PYTHON311" ]; then
    print_error "Python 3.11 –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!"
    echo ""
    print_warning "–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Python 3.11:"
    echo "  brew install python@3.11"
    echo "  –∞–±–æ"
    echo "  brew install python@3.11 && brew link python@3.11"
    exit 1
fi

PYTHON_VERSION=$($PYTHON311 --version 2>&1 | cut -d' ' -f2)
print_success "Python 3.11 –∑–Ω–∞–π–¥–µ–Ω–æ: $PYTHON_VERSION ($PYTHON311)"

# –ö—Ä–æ–∫ 2: Backup
print_step "–ö—Ä–æ–∫ 2/8: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è backup"

BACKUP_DIR="../backups/migration-$(date +%Y%m%d-%H%M%S)"
mkdir -p "$BACKUP_DIR"

# Backup venv
if [ -d "venv" ]; then
    print_warning "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è backup –ø–æ—Ç–æ—á–Ω–æ–≥–æ venv..."
    mv venv "$BACKUP_DIR/venv-old"
    print_success "venv –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ $BACKUP_DIR/venv-old"
fi

# Backup requirements
if [ -f "requirements.txt" ]; then
    cp requirements.txt "$BACKUP_DIR/requirements-old.txt"
    print_success "requirements.txt –∑–±–µ—Ä–µ–∂–µ–Ω–æ"
fi

# Backup –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
print_warning "–•–æ—á–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ backup –±–∞–∑–∏ –¥–∞–Ω–∏—Ö? (y/n)"
read -r response
if [[ "$response" =~ ^[Yy]$ ]]; then
    if command -v pg_dump &> /dev/null; then
        DB_NAME="predator11"
        DB_USER="predator"
        
        print_warning "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è backup –ë–î $DB_NAME..."
        pg_dump -U $DB_USER -d $DB_NAME > "$BACKUP_DIR/db-backup.sql" 2>/dev/null || {
            print_warning "–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ backup –ë–î (–º–æ–∂–ª–∏–≤–æ, –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É)"
        }
        
        if [ -f "$BACKUP_DIR/db-backup.sql" ]; then
            print_success "–ë–î backup —Å—Ç–≤–æ—Ä–µ–Ω–æ: $BACKUP_DIR/db-backup.sql"
        fi
    else
        print_warning "pg_dump –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ backup –ë–î"
    fi
fi

# –ö—Ä–æ–∫ 3: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ venv
print_step "–ö—Ä–æ–∫ 3/8: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ Python 3.11 venv"

$PYTHON311 -m venv venv
print_success "venv —Å—Ç–≤–æ—Ä–µ–Ω–æ"

# –ê–∫—Ç–∏–≤–∞—Ü—ñ—è
source venv/bin/activate

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó
ACTIVE_PYTHON=$(python --version 2>&1 | cut -d' ' -f2)
if [[ ! "$ACTIVE_PYTHON" =~ ^3\.11 ]]; then
    print_error "–ù–µ –≤–¥–∞–ª–æ—Å—è –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ Python 3.11 venv"
    exit 1
fi

print_success "venv –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ: Python $ACTIVE_PYTHON"

# –ö—Ä–æ–∫ 4: –û–Ω–æ–≤–ª–µ–Ω–Ω—è pip
print_step "–ö—Ä–æ–∫ 4/8: –û–Ω–æ–≤–ª–µ–Ω–Ω—è pip, setuptools, wheel"

pip install --upgrade pip setuptools wheel > /dev/null 2>&1
PIP_VERSION=$(pip --version | cut -d' ' -f2)
print_success "pip –æ–Ω–æ–≤–ª–µ–Ω–æ –¥–æ –≤–µ—Ä—Å—ñ—ó $PIP_VERSION"

# –ö—Ä–æ–∫ 5: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
print_step "–ö—Ä–æ–∫ 5/8: –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è modern dependencies"

if [ ! -f "requirements-311-modern.txt" ]; then
    print_error "requirements-311-modern.txt –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!"
    exit 1
fi

print_warning "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π (—Ü–µ –º–æ–∂–µ –∑–∞–π–Ω—è—Ç–∏ 2-3 —Ö–≤–∏–ª–∏–Ω–∏)..."
pip install -r requirements-311-modern.txt

if [ $? -eq 0 ]; then
    print_success "–í—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!"
else
    print_error "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π"
    exit 1
fi

# –ö—Ä–æ–∫ 6: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–ª—é—á–æ–≤–∏—Ö –ø–∞–∫–µ—Ç—ñ–≤
print_step "–ö—Ä–æ–∫ 6/8: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—Ö –≤–µ—Ä—Å—ñ–π"

check_package() {
    VERSION=$(pip show $1 2>/dev/null | grep Version | cut -d' ' -f2)
    if [ -n "$VERSION" ]; then
        print_success "$1: $VERSION"
    else
        print_error "$1: –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
    fi
}

check_package "fastapi"
check_package "pydantic"
check_package "sqlalchemy"
check_package "uvicorn"
check_package "psycopg"
check_package "redis"
check_package "celery"

# –ö—Ä–æ–∫ 7: –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —ñ–º–ø–æ—Ä—Ç—ñ–≤
print_step "–ö—Ä–æ–∫ 7/8: –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —ñ–º–ø–æ—Ä—Ç—ñ–≤"

python -c "
import fastapi
import pydantic
import sqlalchemy
import uvicorn
import psycopg
print('‚úÖ –í—Å—ñ –æ—Å–Ω–æ–≤–Ω—ñ –ø–∞–∫–µ—Ç–∏ —ñ–º–ø–æ—Ä—Ç—É—é—Ç—å—Å—è —É—Å–ø—ñ—à–Ω–æ')
" 2>&1

if [ $? -eq 0 ]; then
    print_success "–Ü–º–ø–æ—Ä—Ç–∏ –ø—Ä–∞—Ü—é—é—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–æ"
else
    print_error "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–º–ø–æ—Ä—Ç—ñ –ø–∞–∫–µ—Ç—ñ–≤"
    exit 1
fi

# –ö—Ä–æ–∫ 8: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—ñ—Ç—É
print_step "–ö—Ä–æ–∫ 8/8: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—ñ—Ç—É –ø—Ä–æ –º—ñ–≥—Ä–∞—Ü—ñ—é"

REPORT_FILE="$BACKUP_DIR/migration-report.txt"
cat > "$REPORT_FILE" << EOF
Predator12 Python 3.11 Migration Report
========================================
Date: $(date)
Python Version: $PYTHON_VERSION
Pip Version: $PIP_VERSION

Backup Location: $BACKUP_DIR

Installed Packages:
-------------------
$(pip list)

Key Versions:
-------------
FastAPI: $(pip show fastapi | grep Version | cut -d' ' -f2)
Pydantic: $(pip show pydantic | grep Version | cut -d' ' -f2)
SQLAlchemy: $(pip show sqlalchemy | grep Version | cut -d' ' -f2)
Uvicorn: $(pip show uvicorn | grep Version | cut -d' ' -f2)
psycopg: $(pip show psycopg | grep Version | cut -d' ' -f2)

Next Steps:
-----------
1. Review MIGRATION_GUIDE_PYTHON311.md
2. Update code for Pydantic v2 (.dict() -> .model_dump())
3. Update code for SQLAlchemy 2.0 (query() -> select())
4. Update DATABASE_URL for psycopg3
5. Run tests: pytest tests/ -v
6. Start server: uvicorn app.main:app --reload

Rollback:
---------
If needed, restore old venv:
  rm -rf venv
  mv $BACKUP_DIR/venv-old venv
  source venv/bin/activate
EOF

print_success "–ó–≤—ñ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ: $REPORT_FILE"

# –§—ñ–Ω–∞–ª
echo ""
print_header "‚úÖ –ú–Ü–ì–†–ê–¶–Ü–Ø –ó–ê–í–ï–†–®–ï–ù–ê!"

echo ""
echo -e "${GREEN}Python 3.11 venv —Å—Ç–≤–æ—Ä–µ–Ω–æ —Ç–∞ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ!${NC}"
echo ""
echo -e "${YELLOW}üìã –ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:${NC}"
echo ""
echo "1Ô∏è‚É£  –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –º—ñ–≥—Ä–∞—Ü—ñ–π–Ω–∏–π –≥—ñ–¥:"
echo "   cat ../MIGRATION_GUIDE_PYTHON311.md"
echo ""
echo "2Ô∏è‚É£  –û–Ω–æ–≤—ñ—Ç—å –∫–æ–¥ –ø—ñ–¥ Pydantic v2 —Ç–∞ SQLAlchemy 2.0"
echo "   - .dict() ‚Üí .model_dump()"
echo "   - .query() ‚Üí select()"
echo "   - DATABASE_URL ‚Üí postgresql+psycopg://..."
echo ""
echo "3Ô∏è‚É£  –ó–∞–ø—É—Å—Ç—ñ—Ç—å —Ç–µ—Å—Ç–∏:"
echo "   pytest tests/ -v"
echo ""
echo "4Ô∏è‚É£  –ó–∞–ø—É—Å—Ç—ñ—Ç—å —Å–µ—Ä–≤–µ—Ä:"
echo "   uvicorn app.main:app --reload"
echo ""
echo "5Ô∏è‚É£  –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ API:"
echo "   curl http://localhost:8000/docs"
echo ""
echo -e "${CYAN}üìä Backup –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —Ç—É—Ç:${NC}"
echo "   $BACKUP_DIR"
echo ""
echo -e "${CYAN}üìÑ –ó–≤—ñ—Ç –ø—Ä–æ –º—ñ–≥—Ä–∞—Ü—ñ—é:${NC}"
echo "   $REPORT_FILE"
echo ""
echo -e "${YELLOW}üîÑ –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–µ–Ω rollback:${NC}"
echo "   rm -rf venv"
echo "   mv $BACKUP_DIR/venv-old venv"
echo "   source venv/bin/activate"
echo ""
print_header "üöÄ –ì–æ—Ç–æ–≤–æ –¥–æ —Ä–æ–∑—Ä–æ–±–∫–∏ –Ω–∞ Python 3.11!"
