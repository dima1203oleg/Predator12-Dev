// –°—Ü–µ–Ω–∞—Ä—ñ—ó —Ç–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ñ –ø—ñ–¥–∫–∞–∑–∫–∏ AI –ì—ñ–¥–∞ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤ —Å–∏—Å—Ç–µ–º–∏ Nexus Core
// –û—Å–Ω–æ–≤–Ω—ñ —Å—Ü–µ–Ω–∞—Ä—ñ—ó –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤
export const guideScenarios = [
    // === DASHBOARD MODULE ===
    {
        id: 'dashboard-health-unknown',
        module: 'dashboard',
        context: 'system-health',
        trigger: {
            condition: 'systemHealth === "unknown"',
            priority: 'high',
            delay: 5
        },
        message: {
            ua: '–°–∏—Å—Ç–µ–º–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞—î –º–µ—Ç—Ä–∏–∫–∏ 5 —Ö–≤. –ü—Ä–∏—á–∏–Ω–∞: —Ç–∞–π–º–∞—É—Ç Prometheus. –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ Recheck –∞–±–æ –í—ñ–¥–∫—Ä–∏—Ç–∏ –ª–æ–≥–∏?',
            en: 'System not sending metrics for 5 min. Cause: Prometheus timeout. Try Recheck or Open Logs?'
        },
        actions: [
            {
                label: { ua: '–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏', en: 'Recheck' },
                action: 'healthCheck',
                type: 'primary'
            },
            {
                label: { ua: '–í—ñ–¥–∫—Ä–∏—Ç–∏ –ª–æ–≥–∏', en: 'Open Logs' },
                action: 'openLogs',
                type: 'secondary',
                params: { module: 'prometheus' }
            }
        ],
        emotion: 'concerned',
        ttl: 30,
        repeatInterval: 120
    },
    {
        id: 'dashboard-health-critical',
        module: 'dashboard',
        context: 'system-health',
        trigger: {
            condition: 'systemHealth === "critical"',
            priority: 'critical',
            delay: 0
        },
        message: {
            ua: 'üö® –ö–†–ò–¢–ò–ß–ù–û! –°–∏—Å—Ç–µ–º–∞ –ø–æ—Ç—Ä–µ–±—É—î –Ω–µ–≥–∞–π–Ω–æ–≥–æ –≤—Ç—Ä—É—á–∞–Ω–Ω—è. –†–µ–∫–æ–º–µ–Ω–¥—É—é –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ª–æ–≥–∏ —Ç–∞ —Å—Ç–∞–Ω —Å–µ—Ä–≤—ñ—Å—ñ–≤.',
            en: 'üö® CRITICAL! System requires immediate intervention. Recommend checking logs and service status.'
        },
        actions: [
            {
                label: { ua: '–ï–∫—Å—Ç—Ä–µ–Ω–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞', en: 'Emergency Diagnostics' },
                action: 'emergencyCheck',
                type: 'danger'
            },
            {
                label: { ua: '–í—ñ–¥–∫—Ä–∏—Ç–∏ –ª–æ–≥–∏', en: 'Open Logs' },
                action: 'openLogs',
                type: 'secondary'
            },
            {
                label: { ua: '–ó–≤\'—è–∑–∞—Ç–∏—Å—è –∑ –∞–¥–º—ñ–Ω–æ–º', en: 'Contact Admin' },
                action: 'contactAdmin',
                type: 'secondary'
            }
        ],
        emotion: 'alert',
        ttl: 60,
        repeatInterval: 180
    },
    {
        id: 'dashboard-high-load',
        module: 'dashboard',
        context: 'performance',
        trigger: {
            condition: 'cpuLoad > 0.9 || memoryUsage > 0.9',
            priority: 'medium',
            delay: 10
        },
        message: {
            ua: '‚ö†Ô∏è –í–∏—Å–æ–∫–µ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏. CPU: ${cpuLoad}%, RAM: ${memoryUsage}%. –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è.',
            en: '‚ö†Ô∏è High system load. CPU: ${cpuLoad}%, RAM: ${memoryUsage}%. Optimization recommended.'
        },
        actions: [
            {
                label: { ua: '–ü–æ–∫–∞–∑–∞—Ç–∏ –º–µ—Ç—Ä–∏–∫–∏', en: 'Show Metrics' },
                action: 'navigate',
                type: 'primary',
                params: { module: 'dashboard', view: 'performance' }
            },
            {
                label: { ua: '–ú–∞—Å—à—Ç–∞–±—É–≤–∞—Ç–∏ —Å–µ—Ä–≤—ñ—Å–∏', en: 'Scale Services' },
                action: 'scaleServices',
                type: 'secondary'
            }
        ],
        emotion: 'concerned',
        ttl: 45
    },
    // === MAS MODULE ===
    {
        id: 'mas-agent-down',
        module: 'mas',
        context: 'agent-health',
        trigger: {
            condition: 'agents.some(agent => agent.status === "down")',
            priority: 'high',
            delay: 2
        },
        message: {
            ua: 'ü§ñ –ê–≥–µ–Ω—Ç ${agentName} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –û—Å—Ç–∞–Ω–Ω—ñ–π –ø—ñ–Ω–≥: ${lastSeen}. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –∞–±–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ª–æ–≥–∏?',
            en: 'ü§ñ Agent ${agentName} is down. Last ping: ${lastSeen}. Restart or check logs?'
        },
        actions: [
            {
                label: { ua: '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –∞–≥–µ–Ω—Ç', en: 'Restart Agent' },
                action: 'restartAgent',
                type: 'primary',
                params: { agentId: '${agentId}' }
            },
            {
                label: { ua: '–ü–æ–∫–∞–∑–∞—Ç–∏ –ª–æ–≥–∏', en: 'Show Logs' },
                action: 'openLogs',
                type: 'secondary',
                params: { agent: '${agentId}' }
            }
        ],
        emotion: 'concerned',
        ttl: 30
    },
    {
        id: 'mas-degraded-performance',
        module: 'mas',
        context: 'agent-performance',
        trigger: {
            condition: 'agents.some(agent => agent.cpu > 0.9 || agent.memory > 0.9)',
            priority: 'medium',
            delay: 15
        },
        message: {
            ua: 'üìä –ê–≥–µ–Ω—Ç ${agentName} –∑ –≤–∏—Å–æ–∫–∏–º –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è–º. CPU: ${cpu}%, RAM: ${memory}%. –û–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏ –∞–±–æ –º–∞—Å—à—Ç–∞–±—É–≤–∞—Ç–∏?',
            en: 'üìä Agent ${agentName} under high load. CPU: ${cpu}%, RAM: ${memory}%. Optimize or scale?'
        },
        actions: [
            {
                label: { ua: '–í—ñ–¥–∫—Ä–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å', en: 'Open Profile' },
                action: 'openAgentProfile',
                type: 'primary',
                params: { agentId: '${agentId}' }
            },
            {
                label: { ua: '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –∑–∞–¥–∞—á—É', en: 'Restart Task' },
                action: 'restartAgentTask',
                type: 'secondary',
                params: { agentId: '${agentId}' }
            }
        ],
        emotion: 'focused',
        ttl: 40
    },
    // === ETL MODULE ===
    {
        id: 'etl-queue-high',
        module: 'etl',
        context: 'queue-status',
        trigger: {
            condition: 'etlQueue > 1000',
            priority: 'medium',
            delay: 10
        },
        message: {
            ua: 'üìà –ß–µ—Ä–≥–∞ ETL –∑—Ä–æ—Å–ª–∞ –¥–æ ${queueSize}. –ü–æ—Ç—Ä—ñ–±–Ω–æ –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è? –í—ñ–¥–∫—Ä–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω–µ–∫—Ç–æ—Ä–∞.',
            en: 'üìà ETL queue grew to ${queueSize}. Scaling needed? Open connector settings.'
        },
        actions: [
            {
                label: { ua: '–ú–∞—Å—à—Ç–∞–±—É–≤–∞—Ç–∏ –≤–æ—Ä–∫–µ—Ä–∏', en: 'Scale Workers' },
                action: 'scaleETLWorkers',
                type: 'primary'
            },
            {
                label: { ua: '–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω–µ–∫—Ç–æ—Ä–∞', en: 'Connector Settings' },
                action: 'openConnectorSettings',
                type: 'secondary'
            },
            {
                label: { ua: '–ü—Ä—ñ–æ—Ä–∏—Ç–∏–∑—É–≤–∞—Ç–∏ –∑–∞–¥–∞—á—ñ', en: 'Prioritize Tasks' },
                action: 'prioritizeTasks',
                type: 'secondary'
            }
        ],
        emotion: 'focused',
        ttl: 50
    },
    {
        id: 'etl-pipeline-failed',
        module: 'etl',
        context: 'pipeline-status',
        trigger: {
            condition: 'pipelines.some(p => p.status === "failed")',
            priority: 'high',
            delay: 1
        },
        message: {
            ua: 'üí• –ü–∞–π–ø–ª–∞–π–Ω "${pipelineName}" –∑–∞–≤–µ—Ä—à–∏–≤—Å—è –∑ –ø–æ–º–∏–ª–∫–æ—é. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –∞–±–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é?',
            en: 'üí• Pipeline "${pipelineName}" failed. Restart or check configuration?'
        },
        actions: [
            {
                label: { ua: '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏', en: 'Restart' },
                action: 'restartPipeline',
                type: 'primary',
                params: { pipelineId: '${pipelineId}' }
            },
            {
                label: { ua: '–ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–º–∏–ª–∫–∏', en: 'Show Errors' },
                action: 'showPipelineErrors',
                type: 'secondary',
                params: { pipelineId: '${pipelineId}' }
            },
            {
                label: { ua: '–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥', en: 'Edit Config' },
                action: 'editPipelineConfig',
                type: 'secondary',
                params: { pipelineId: '${pipelineId}' }
            }
        ],
        emotion: 'alert',
        ttl: 30
    },
    // === CHRONO MODULE ===
    {
        id: 'chrono-anomaly-detected',
        module: 'chrono',
        context: 'anomaly-detection',
        trigger: {
            condition: 'anomalies.length > 0 && anomalies.some(a => a.severity === "high")',
            priority: 'medium',
            delay: 5
        },
        message: {
            ua: 'üîç –í–∏—è–≤–ª–µ–Ω–æ –∞–Ω–æ–º–∞–ª—ñ—ó –≤ –¥–∞–Ω–∏—Ö –∑–∞ –ø–µ—Ä—ñ–æ–¥ ${timeRange}. Severity: ${severity}. –î–æ—Å–ª—ñ–¥–∂—É–≤–∞—Ç–∏?',
            en: 'üîç Anomalies detected in data for period ${timeRange}. Severity: ${severity}. Investigate?'
        },
        actions: [
            {
                label: { ua: '–ê–Ω–∞–ª—ñ–∑ –∞–Ω–æ–º–∞–ª—ñ–π', en: 'Analyze Anomalies' },
                action: 'analyzeAnomalies',
                type: 'primary'
            },
            {
                label: { ua: '–ß–∞—Å–æ–≤–∞ –ª—ñ–Ω—ñ—è', en: 'Timeline View' },
                action: 'openTimeline',
                type: 'secondary',
                params: { timeRange: '${timeRange}' }
            }
        ],
        emotion: 'focused',
        ttl: 60
    },
    // === OPENSEARCH MODULE ===
    {
        id: 'opensearch-connection-lost',
        module: 'opensearch',
        context: 'connection-status',
        trigger: {
            condition: 'opensearchStatus === "disconnected"',
            priority: 'high',
            delay: 3
        },
        message: {
            ua: 'üîå –í—Ç—Ä–∞—á–µ–Ω–æ –∑–≤\'—è–∑–æ–∫ –∑ OpenSearch. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∞–±–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Å–µ—Ä–≤—ñ—Å?',
            en: 'üîå Lost connection to OpenSearch. Check connection or restart service?'
        },
        actions: [
            {
                label: { ua: '–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∑–≤\'—è–∑–æ–∫', en: 'Test Connection' },
                action: 'testOpenSearchConnection',
                type: 'primary'
            },
            {
                label: { ua: '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏', en: 'Restart Service' },
                action: 'restartOpenSearch',
                type: 'secondary'
            }
        ],
        emotion: 'concerned',
        ttl: 25
    },
    // === SIMULATOR MODULE ===
    {
        id: 'simulator-scenario-completed',
        module: 'simulator',
        context: 'simulation-status',
        trigger: {
            condition: 'simulations.some(s => s.status === "completed")',
            priority: 'low',
            delay: 2
        },
        message: {
            ua: '‚úÖ –°—Ü–µ–Ω–∞—Ä—ñ–π "${scenarioName}" –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≥–æ—Ç–æ–≤—ñ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É.',
            en: '‚úÖ Scenario "${scenarioName}" completed. Results ready for analysis.'
        },
        actions: [
            {
                label: { ua: '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏', en: 'View Results' },
                action: 'viewSimulationResults',
                type: 'primary',
                params: { simulationId: '${simulationId}' }
            },
            {
                label: { ua: '–ï–∫—Å–ø–æ—Ä—Ç –∑–≤—ñ—Ç—É', en: 'Export Report' },
                action: 'exportSimulationReport',
                type: 'secondary',
                params: { simulationId: '${simulationId}' }
            }
        ],
        emotion: 'happy',
        ttl: 120
    },
    // === ADMIN MODULE ===
    {
        id: 'admin-security-alert',
        module: 'admin',
        context: 'security',
        trigger: {
            condition: 'securityEvents.some(e => e.severity === "critical")',
            priority: 'critical',
            delay: 0
        },
        message: {
            ua: 'üö® –ë–ï–ó–ü–ï–ö–ê: –í–∏—è–≤–ª–µ–Ω–æ –ø—ñ–¥–æ–∑—Ä—ñ–ª—É –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å. –¢–∏–ø: ${eventType}. –ù–µ–≥–∞–π–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏!',
            en: 'üö® SECURITY: Suspicious activity detected. Type: ${eventType}. Check immediately!'
        },
        actions: [
            {
                label: { ua: '–ñ—É—Ä–Ω–∞–ª –±–µ–∑–ø–µ–∫–∏', en: 'Security Log' },
                action: 'openSecurityLog',
                type: 'danger'
            },
            {
                label: { ua: '–ë–ª–æ–∫—É–≤–∞—Ç–∏ IP', en: 'Block IP' },
                action: 'blockSuspiciousIP',
                type: 'danger',
                params: { ip: '${sourceIP}' }
            }
        ],
        emotion: 'alert',
        ttl: 300,
        repeatInterval: 60
    },
    // === ONBOARDING SCENARIOS ===
    {
        id: 'onboarding-first-visit',
        module: 'dashboard',
        context: 'first-visit',
        trigger: {
            condition: 'isFirstVisit === true',
            priority: 'low',
            delay: 2
        },
        message: {
            ua: 'üëã –í—ñ—Ç–∞—î–º–æ –≤ Nexus Core! –Ø –≤–∞—à AI-–≥—ñ–¥. –•–æ—á–µ—Ç–µ —à–≤–∏–¥–∫–∏–π —Ç—É—Ä –ø–æ —Å–∏—Å—Ç–µ–º—ñ?',
            en: 'üëã Welcome to Nexus Core! I\'m your AI Guide. Want a quick system tour?'
        },
        actions: [
            {
                label: { ua: '–ü–æ—á–∞—Ç–∏ —Ç—É—Ä', en: 'Start Tour' },
                action: 'startOnboardingTour',
                type: 'primary'
            },
            {
                label: { ua: '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç–∏', en: 'Skip' },
                action: 'skipOnboarding',
                type: 'secondary'
            }
        ],
        emotion: 'happy',
        ttl: 180
    },
    // === NETWORK CONNECTIVITY ===
    {
        id: 'network-offline',
        module: '*', // Global scenario
        context: 'connectivity',
        trigger: {
            condition: 'navigator.onLine === false',
            priority: 'high',
            delay: 1
        },
        message: {
            ua: 'üì° –ó–≤\'—è–∑–æ–∫ –≤—Ç—Ä–∞—á–µ–Ω–æ. –ü—Ä–∞—Ü—é—é –≤ –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º—ñ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –º–µ—Ä–µ–∂–µ–≤–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è.',
            en: 'üì° Connection lost. Working in offline mode. Check network connection.'
        },
        actions: [
            {
                label: { ua: '–ü–æ–≤—Ç–æ—Ä–∏—Ç–∏', en: 'Retry' },
                action: 'retryConnection',
                type: 'primary'
            },
            {
                label: { ua: '–û—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º', en: 'Offline Mode' },
                action: 'enterOfflineMode',
                type: 'secondary'
            }
        ],
        emotion: 'concerned',
        ttl: 20,
        repeatInterval: 30
    }
];
// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ü—ñ–Ω–∫–∏ —É–º–æ–≤ —Ç—Ä–∏–≥–µ—Ä—ñ–≤
export const evaluateTrigger = (condition, context) => {
    try {
        // –ü—Ä–æ—Å—Ç–∏–π evaluer –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ—ó –æ—Ü—ñ–Ω–∫–∏ —É–º–æ–≤
        // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω—ñ –≤–∞—Ä—Ç–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –±—ñ–ª—å—à –±–µ–∑–ø–µ—á–Ω—É –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É
        return new Function(...Object.keys(context), `return ${condition}`)(...Object.values(context));
    }
    catch (error) {
        console.error('Error evaluating trigger condition:', condition, error);
        return false;
    }
};
// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—ñ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–º—ñ–Ω–Ω–∏—Ö —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
export const interpolateMessage = (message, context) => {
    return message.replace(/\$\{([^}]+)\}/g, (match, variable) => {
        return context[variable] || match;
    });
};
// –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤ –∑–∞ –º–æ–¥—É–ª–µ–º —Ç–∞ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–æ–º
export const getActiveScenarios = (module, context, minPriority = 'low') => {
    const priorityLevels = { low: 0, medium: 1, high: 2, critical: 3 };
    return guideScenarios
        .filter(scenario => (scenario.module === module || scenario.module === '*') &&
        priorityLevels[scenario.trigger.priority] >= priorityLevels[minPriority] &&
        evaluateTrigger(scenario.trigger.condition, context))
        .sort((a, b) => priorityLevels[b.trigger.priority] - priorityLevels[a.trigger.priority]);
};
export default {
    scenarios: guideScenarios,
    evaluateTrigger,
    interpolateMessage,
    getActiveScenarios
};
